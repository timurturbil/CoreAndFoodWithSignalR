
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*
<div class="demo-section k-content">
    <h4>Categories:</h4>
    @(Html.Kendo().DropDownList()
        .Name("categories")
        .HtmlAttributes(new { style = "width:100%" })
        .OptionLabel("Select category...")
        .DataTextField("CategoryName")
        .DataValueField("CategoryId")
        .Height(310)
        .Template("<span class=\"k-state-default\" style=\"background-image: url(" + Url.Content("~/shared/web/dropdownlist/") + "#:data.CategoryId#.jpg" + ");\" ></span>" +
            "<span class=\"k-state-default\" style=\"padding-left: 15px;\"><h3>#: data.CategoryName #</h3></span>")
        .ValueTemplate("<span class=\"selected-value\" style=\"background-image: url(" + Url.Content("~/shared/web/dropdownlist/") + "#:data.CategoryId#.jpg" + ");\" ></span>" + "<span>#:data.CategoryName#</span>")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("Overview_Get_Categories", "DropDownList");
            });
        })
        .FooterTemplate("Total number of <strong>#: instance.dataSource.total() #</strong> categories found")
    )

    <h4 style="margin-top: 2em;">Products:</h4>
    @(Html.Kendo().DropDownList()
                .Name("products")
                .HtmlAttributes(new { style = "width:100%" })
                .OptionLabel("Select product...")
                .DataTextField("ProductName")
                .DataValueField("ProductID")
                .DataSource(source => source
                      .Custom()
                      .Group(g => g.Add("SupplierCountry", typeof(string)))
                      .ServerFiltering(true)
                      .Transport(transport => transport
                        .Read(read =>
                        {
                            read.Action("Overview_Get_Products", "DropDownList").Data("filterProducts");
                        }))
                )
                .Events(e => e.Change("onChange"))
                .Enable(false)
                .AutoBind(false)
                .CascadeFrom("categories")
    )

    <h4 style="margin-top: 2em;">Ship to:</h4>
    @(Html.Kendo().DropDownList()
        .Name("shipTo")
        .HtmlAttributes(new { style = "width:100%" })
        .OptionLabel("Select address...")
        .DataTextField("ShipAddress")
        .DataValueField("OrderID")
        .Height(290)
        .DataSource(source =>
        {
            source.Custom()
                .ServerFiltering(true)
                .ServerPaging(true)
                .PageSize(40)
                .Type("aspnetmvc-ajax") //Set this type if you want to use DataSourceRequest and ToDataSourceResult instances
                .Transport(transport =>
                {
                    transport.Read("Virtualization_Read", "DropDownList");
                })
                .Schema(schema =>
                {
                    schema.Data("Data") //define the [data](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.data) option
                        .Total("Total"); //define the [total](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.total) option
            });
        })
        .Virtual(v => v.ItemHeight(26).ValueMapper("valueMapper"))
        .Enable(false)
        .AutoBind(false)
    )
</div>*@

<script>
    function filterProducts() {
        return {
            categories: $("#categories").val()
        };
    }

    function onChange(e) {
        var orders = $("#shipTo").data("kendoDropDownList");
        orders.value("");

        if (e.sender.value() == "") {
            orders.enable(false);
        }
        else {
            orders.enable(true);
        }
    }

    function valueMapper(options) {
        $.ajax({
            url: "@Url.Action("Orders_ValueMapper", "DropDownList")",
            data: convertValues(options.value),
            success: function (data) {
                options.success(data);
            }
        });
    }


    function convertValues(value) {
        var data = {};
        value = $.isArray(value) ? value : [value];
        for (var idx = 0; idx < value.length; idx++) {
            data["values[" + idx + "]"] = value[idx];
        }
        return data;
    }
</script>

<style>
    .k-readonly {
        color: gray;
    }

    .selected-value {
        display: inline-block;
        vertical-align: middle;
        width: 24px;
        height: 24px;
        background-size: 100%;
        margin-right: 5px;
        border-radius: 50%;
    }

    #categories-list .k-list-item-text {
        line-height: 1em;
        min-width: 300px;
    }

    /* Material Theme padding adjustment*/
    .k-material #categories-list .k-list-item-text,
    .k-material #categories-list .k-list-item-text.k-state-hover,
    .k-materialblack #categories-list .k-list-item-text,
    .k-materialblack #categories-list .k-list-item-text.k-state-hover {
        padding-left: 5px;
        border-left: 0;
    }

    #categories-list .k-list-item-text > span {
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        vertical-align: middle;
        display: table-cell;
        vertical-align: central;
        margin: 10px 10px 10px 5px;
    }

    #categories-list .k-list-item-text > span:first-child {
        -moz-box-shadow: inset 0 0 30px rgba(0,0,0,.3);
        -webkit-box-shadow: inset 0 0 30px rgba(0,0,0,.3);
        box-shadow: inset 0 0 30px rgba(0,0,0,.3);
        margin: 10px;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-size: 100%;
        background-repeat: no-repeat;
    }

    #categories-list h3 {
        font-size: 1.2em;
        font-weight: normal;
        margin: 0 0 1px 0;
        padding: 0;
    }

    #categories-list p {
        margin: 0;
        padding: 0;
        font-size: .8em;
    }
</style>

